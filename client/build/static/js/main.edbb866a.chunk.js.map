{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/SearchBooks.jsx","utils/API.js","utils/queries.js","components/SavedBooks.jsx","pages/LoginForm.jsx","pages/SignupForm.jsx","components/Navbar.jsx","pages/Dashboard.jsx","App.jsx","index.js"],"names":["LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","ADD_USER","_templateObject2","SAVE_BOOK","_templateObject3","REMOVE_BOOK","_templateObject4","console","log","getToken","localStorage","getItem","removeToken","removeItem","token","setItem","loggedIn","logout","window","location","assign","BookCard","_ref","book","handleSaveBook","isExpanded","setIsExpanded","useState","_jsxs","className","children","image","_jsx","src","alt","concat","title","description","onClick","toggleExpanded","auth","bookId","SearchBooks","searchInput","setSearchInput","searchedBooks","setSearchedBooks","saveBook","error","useMutation","async","bookToSave","find","variables","bookData","err","onSubmit","event","preventDefault","response","query","fetch","ok","Error","items","json","map","_book$volumeInfo$imag","id","authors","volumeInfo","imageLinks","thumbnail","link","infoLink","value","onChange","e","target","type","placeholder","GET_ME","SavedBooks","_userData$savedBooks","loading","data","useQuery","removeBook","userData","me","savedBooks","handleDeleteBook","LoginForm","setLoggedIn","formState","setFormState","email","password","login","history","useHistory","handleChange","name","push","networkError","graphQLErrors","htmlFor","required","SignupForm","username","addUser","Navbar","Link","to","_Fragment","handleLogout","Dashboard","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","cache","InMemoryCache","App","useEffect","ApolloProvider","Router","Switch","Route","exact","path","component","Redirect","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.edbb866a.chunk.js","sourcesContent":["// client/src/utils/mutations.js\n\nimport { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const SAVE_BOOK = gql`\n  mutation saveBook($bookData: BookInput!) {\n    saveBook(bookData: $bookData) {\n      _id\n      username\n      email\n      savedBooks {\n        bookId\n        authors\n        title\n        description\n        image\n        link\n      }\n    }\n  }\n`;\n\nexport const REMOVE_BOOK = gql`\n  mutation removeBook($bookId: ID!) {\n    removeBook(bookId: $bookId) {\n      _id\n      username\n      email\n      savedBooks {\n        bookId\n        authors\n        title\n        description\n        image\n        link\n      }\n    }\n  }\n`;\n\n// Adding logging\nconsole.log('Mutations:', {\n  LOGIN_USER,\n  ADD_USER,\n  SAVE_BOOK,\n  REMOVE_BOOK,\n});\n","// client/src/utils/auth.js\n\nexport const getToken = () => {\n    return localStorage.getItem('id_token');\n  };\n  \n  export const setToken = (token) => {\n    localStorage.setItem('id_token', token);\n  };\n  \n  export const removeToken = () => {\n    localStorage.removeItem('id_token');\n  };\n  \n  export const loggedIn = () => {\n    const token = getToken();\n    return !!token;\n  };\n  \n  export const logout = () => {\n    removeToken();\n    window.location.assign('/');\n  };\n  \n  export default {\n    getToken,\n    setToken,\n    removeToken,\n    loggedIn,\n    logout,\n  };\n  ","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport './custom.css'; // Import custom CSS\n\nconst SearchBooks = () => {\n  const [searchInput, setSearchInput] = useState('');\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const { items } = await response.json();\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n        link: book.volumeInfo.infoLink,\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveBook = async (bookId) => {\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n    const token = auth.loggedIn() ? auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await saveBook({\n        variables: { bookData: bookToSave },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form className=\"form-inline my-2 my-lg-0\" onSubmit={handleFormSubmit}>\n        <input\n          className=\"form-control mr-sm-2\"\n          value={searchInput}\n          onChange={(e) => setSearchInput(e.target.value)}\n          type=\"text\"\n          placeholder=\"Search for a book\"\n        />\n        <button className=\"btn btn-custom my-2 my-sm-0\" type=\"submit\">Submit</button>\n      </form>\n\n      <div className=\"row\">\n        {searchedBooks.map((book) => (\n          <div key={book.bookId} className=\"col-md-4\">\n            <BookCard book={book} handleSaveBook={handleSaveBook} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst BookCard = ({ book, handleSaveBook }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <div className=\"card mb-4\">\n      {book.image && <img src={book.image} className=\"card-img-top\" alt={`The cover for ${book.title}`} />}\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{book.title}</h5>\n        <p className={`card-text ${isExpanded ? 'expanded' : ''}`}>{book.description}</p>\n        <button className=\"btn-read-more\" onClick={toggleExpanded}>\n          {isExpanded ? 'Read Less' : 'Read More'}\n        </button>\n        {auth.loggedIn() && (\n          <button className=\"btn btn-custom mt-2\" onClick={() => handleSaveBook(book.bookId)}>Save This Book</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBooks;\n","export const searchGoogleBooks = (query) => {\n    return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n  };\n  ","// client/src/utils/queries.js\n\nimport { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      bookCount\n      savedBooks {\n        bookId\n        authors\n        title\n        description\n        image\n        link\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport auth from '../utils/auth';\nimport './custom.css'; // Import custom CSS\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n\n  const userData = data?.me || {};\n\n  const handleDeleteBook = async (bookId) => {\n    try {\n      await removeBook({\n        variables: { bookId },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"text-center mb-4\">Saved Books</h2>\n      <div className=\"row\">\n        {userData.savedBooks?.map((book) => (\n          <div key={book.bookId} className=\"col-md-4\">\n            <div className=\"card mb-4\">\n              {book.image && <img src={book.image} className=\"card-img-top\" alt={`The cover for ${book.title}`} />}\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{book.title}</h5>\n                <p className=\"card-text\">{book.description}</p>\n                <button className=\"btn btn-custom mt-2\" onClick={() => handleDeleteBook(book.bookId)}>\n                  Remove This Book\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SavedBooks;\n","// client/src/pages/LoginForm.jsx\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { LOGIN_USER } from '../utils/mutations';\nimport auth from '../utils/auth';\n\nconst LoginForm = ({ setLoggedIn }) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n  const history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log('Form State:', formState);\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n      console.log('Login Data:', data);\n\n      if (data && data.login && data.login.token) {\n        auth.setToken(data.login.token);\n        console.log('Login Success:', data.login);\n        setLoggedIn(true);\n        history.push('/dashboard');\n      } else {\n        console.error('Login Error: No token returned');\n      }\n    } catch (e) {\n      console.error('Login Error:', e);\n      console.error('Login Error Network:', e.networkError);\n      console.error('Login Error GraphQL:', e.graphQLErrors);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-custom\">\n          Submit\n        </button>\n        {error && <div className=\"alert alert-danger mt-2\">Login failed</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// client/src/pages/SignupForm.jsx\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { ADD_USER } from '../utils/mutations';\nimport auth from '../utils/auth';\n\nconst SignupForm = ({ setLoggedIn }) => {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n  const [addUser, { error }] = useMutation(ADD_USER);\n  const history = useHistory();\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log('Form State:', formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n      console.log('Signup Data:', data);\n\n      if (data && data.addUser && data.addUser.token) {\n        auth.setToken(data.addUser.token);\n        console.log('Signup Success:', data.addUser);\n        setLoggedIn(true);\n        history.push('/dashboard');\n      } else {\n        console.error('Signup Error: No token returned');\n      }\n    } catch (e) {\n      console.error('Signup Error:', e);\n      console.error('Signup Error Network:', e.networkError);\n      console.error('Signup Error GraphQL:', e.graphQLErrors);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"username\"\n            value={formState.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            value={formState.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            name=\"password\"\n            value={formState.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-custom\">\n          Submit\n        </button>\n        {error && <div className=\"alert alert-danger mt-2\">Signup failed</div>}\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","// client/src/components/Navbar.jsx\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport auth from '../utils/auth';\n\nconst Navbar = ({ loggedIn, setLoggedIn }) => {\n  const handleLogout = () => {\n    auth.logout();\n    setLoggedIn(false);\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">Book Search</Link>\n      <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav ml-auto\">\n          {loggedIn && (\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/search\">Search for Books</Link>\n            </li>\n          )}\n          {loggedIn ? (\n            <>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/saved\">Saved Books</Link>\n              </li>\n              <li className=\"nav-item\">\n                <button className=\"nav-link btn btn-link\" onClick={handleLogout}>Logout</button>\n              </li>\n            </>\n          ) : (\n            <>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","// client/src/pages/Dashboard.jsx\n\nimport React from 'react';\n\nconst Dashboard = () => {\n  return (\n    <div className=\"container\">\n      <h2>Welcome to your Dashboard</h2>\n      <p>You have successfully logged in!</p>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport SearchBooks from './components/SearchBooks';\nimport SavedBooks from './components/SavedBooks';\nimport LoginForm from './pages/LoginForm';\nimport SignupForm from './pages/SignupForm';\nimport Navbar from './components/Navbar';\nimport Dashboard from './pages/Dashboard';\nimport auth from './utils/auth';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport './index.css'; // Import the CSS file\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(auth.loggedIn());\n\n  useEffect(() => {\n    setLoggedIn(auth.loggedIn());\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Navbar loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\n          <Switch>\n            <Route exact path=\"/\">\n              <div className=\"container-fluid\">\n                <h1 className=\"text-center mb-4\">Welcome to the Book Search Engine</h1>\n                <p className=\"text-center mb-4\">Find and save your favorite books with ease!</p>\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-md-5\">\n                    <div className=\"card mb-4\">\n                      <div className=\"card-header\">Login</div>\n                      <div className=\"card-body\">\n                        <LoginForm setLoggedIn={setLoggedIn} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-5\">\n                    <div className=\"card mb-4\">\n                      <div className=\"card-header\">Signup</div>\n                      <div className=\"card-body\">\n                        <SignupForm setLoggedIn={setLoggedIn} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Route>\n            <Route exact path=\"/search\" component={loggedIn ? SearchBooks : () => <Redirect to=\"/\" />} />\n            <Route exact path=\"/saved\" component={loggedIn ? SavedBooks : () => <Redirect to=\"/\" />} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// client/src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'; // Optional: if you have any global styles\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}