{"ast":null,"code":"var _jsxFileName = \"/Users/austinallen/Desktop/book-search-engine/client/src/App.jsx\";\n// client/src/App.jsx\n\nimport React from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport SearchBooks from './components/SearchBooks';\nimport SavedBooks from './components/SavedBooks';\nimport LoginForm from './pages/LoginForm';\nimport SignupForm from './pages/SignupForm';\nimport Navbar from './components/Navbar'; // Import Navbar\nimport Dashboard from './pages/Dashboard'; // Import Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql' // Ensure this is correct\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: SearchBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/saved\",\n            component: SavedBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LoginForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            component: SignupForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/dashboard\",\n            component: Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","BrowserRouter","Router","Route","Switch","setContext","SearchBooks","SavedBooks","LoginForm","SignupForm","Navbar","Dashboard","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component","_c","$RefreshReg$"],"sources":["/Users/austinallen/Desktop/book-search-engine/client/src/App.jsx"],"sourcesContent":["// client/src/App.jsx\n\nimport React from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\nimport SearchBooks from './components/SearchBooks';\nimport SavedBooks from './components/SavedBooks';\nimport LoginForm from './pages/LoginForm';\nimport SignupForm from './pages/SignupForm';\nimport Navbar from './components/Navbar'; // Import Navbar\nimport Dashboard from './pages/Dashboard'; // Import Dashboard\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql', // Ensure this is correct\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    }\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Navbar /> {/* Include Navbar */}\n          <Switch>\n            <Route exact path='/' component={SearchBooks} />\n            <Route exact path='/saved' component={SavedBooks} />\n            <Route exact path='/login' component={LoginForm} />\n            <Route exact path='/signup' component={SignupForm} />\n            <Route exact path='/dashboard' component={Dashboard} /> {/* Add Dashboard route */}\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}